const port=4e3,express=require("express"),app=express(),mongoose=require("mongoose"),jwt=require("jsonwebtoken"),multer=require("multer"),path=require("path"),cors=require("cors");app.use(express.json()),app.use(cors()),mongoose.connect("mongodb+srv://arulllk:1234@nodeexpressprojects.0zp0qgr.mongodb.net/ECOMMERCE-PR"),app.get("/",(req,res)=>{res.send("Express app is running")});const storage=multer.diskStorage({destination:"./upload/images",filename:function(req,file,cb){return cb(null,`${file.fieldname}_${Date.now()}-${path.extname(file.originalname)}`)}}),upload=multer({storage:storage});app.use("/images",express.static("upload/images")),app.post("/upload",upload.single("product"),(req,res)=>{res.json({success:1,image_url:`http://localhost:4000/images/${req.file.filename}`})});const productSChema=mongoose.Schema({id:{type:Number,required:!0},name:{type:String,required:!0},image:{type:String,required:!0},category:{type:String,required:!0},new_price:{type:Number,required:!0},old_price:{type:Number,required:!0},date:{type:Date,default:Date.now},available:{type:Boolean,default:!0}}),Product=mongoose.model("Product",productSChema);app.post("/addproduct",async(req,res)=>{console.log("req.body",req.body);const{name:name,image:image,category:category,new_price:new_price,old_price:old_price}=req.body;console.log("image ",image);let products=await Product.find({}),id=1;if(products.length>0){let lastProductArray,lastProduct;id=products.slice(-1)[0].id+1}const product=new Product({id:id,name:name,image:image,category:category,new_price:new_price,old_price:old_price});await product.save(),res.json({success:!0,product:product})}),app.post("/removeproduct",async(req,res)=>{await Product.findOneAndDelete({id:req.body.id}),console.log("Removed"),res.json({success:!0,name:req.body.name})}),app.get("/allproducts",async(req,res)=>{let products=await Product.find({});res.send(products)}),app.listen(4e3,error=>{error?console.log(`Error is ${error}`):console.log("Server runnion on port 4000")});